ALTER TABLE UTILISATEUR ADD RESETPASSWORDDATE TIMESTAMP
ALTER TABLE UTILISATEUR ADD RESETPASSWORDSALT VARCHAR(255)

// Pour les contraintes d'integrité

ALTER TABLE MODELECONTRAT ADD CONSTRAINT UNQ_MODELECONTRAT_0 UNIQUE (nom)
ALTER TABLE CONTRAT ADD CONSTRAINT UNQ_CONTRAT_0 UNIQUE (modeleContrat_id, utilisateur_id)
ALTER TABLE PRODUCTEUR ADD CONSTRAINT UNQ_PRODUCTEUR_0 UNIQUE (nom)
ALTER TABLE UTILISATEUR ADD CONSTRAINT UNQ_UTILISATEUR_0 UNIQUE (nom, prenom)
ALTER TABLE UTILISATEUR ADD CONSTRAINT UNQ_UTILISATEUR_1 UNIQUE (email)
ALTER TABLE ROLE ADD CONSTRAINT UNQ_ROLE_0 UNIQUE (nom)

//
CREATE TABLE LOGACCESS (ID BIGINT NOT NULL, BROWSER VARCHAR(255), DATEIN TIMESTAMP, DATEOUT TIMESTAMP, IP VARCHAR(255), UTILISATEUR_ID BIGINT, PRIMARY KEY (ID))
ALTER TABLE LOGACCESS ADD CONSTRAINT FK_LOGACCESS_UTILISATEUR_ID FOREIGN KEY (UTILISATEUR_ID) REFERENCES UTILISATEUR (ID)


// 22-11-2013 - Ajout des dates et des produits exclus
CREATE TABLE MODELECONTRATEXCLUDE (ID BIGINT NOT NULL, DATE_ID BIGINT NOT NULL, MODELECONTRAT_ID BIGINT NOT NULL, PRODUIT_ID BIGINT, PRIMARY KEY (ID));
ALTER TABLE MODELECONTRATEXCLUDE ADD CONSTRAINT FK_MODELECONTRATEXCLUDE_DATE_ID FOREIGN KEY (DATE_ID) REFERENCES MODELECONTRATDATE (ID);
ALTER TABLE MODELECONTRATEXCLUDE ADD CONSTRAINT FK_MODELECONTRATEXCLUDE_MODELECONTRAT_ID FOREIGN KEY (MODELECONTRAT_ID) REFERENCES MODELECONTRAT (ID);
ALTER TABLE MODELECONTRATEXCLUDE ADD CONSTRAINT FK_MODELECONTRATEXCLUDE_PRODUIT_ID FOREIGN KEY (PRODUIT_ID) REFERENCES MODELECONTRATPRODUIT (ID);

//10-12-2013 - Ajout des paiements
CREATE TABLE PAIEMENT (ID BIGINT NOT NULL, ETAT VARCHAR(255), MONTANT INTEGER, CONTRAT_ID BIGINT, MODELECONTRATDATEPAIEMENT_ID BIGINT, PRIMARY KEY (ID));
CREATE TABLE MODELECONTRATDATEPAIEMENT (ID BIGINT NOT NULL, DATEPAIEMENT DATE, MODELECONTRAT_ID BIGINT, PRIMARY KEY (ID));
ALTER TABLE PAIEMENT ADD CONSTRAINT FK_PAIEMENT_MODELECONTRATDATEPAIEMENT_ID FOREIGN KEY (MODELECONTRATDATEPAIEMENT_ID) REFERENCES MODELECONTRATDATEPAIEMENT (ID);
ALTER TABLE PAIEMENT ADD CONSTRAINT FK_PAIEMENT_CONTRAT_ID FOREIGN KEY (CONTRAT_ID) REFERENCES CONTRAT (ID);
ALTER TABLE MODELECONTRATDATEPAIEMENT ADD CONSTRAINT FK_MODELECONTRATDATEPAIEMENT_MODELECONTRAT_ID FOREIGN KEY (MODELECONTRAT_ID) REFERENCES MODELECONTRAT (ID);
ALTER TABLE PRODUCTEUR DROP COLUMN LIBCHEQUE;
ALTER TABLE MODELECONTRAT ADD DATEREMISECHEQUE DATE;
ALTER TABLE MODELECONTRAT ADD  LIBCHEQUE VARCHAR(255);
update MODELECONTRAT set DATEREMISECHEQUE=DATEFININSCRIPTION;
ALTER TABLE MODELECONTRAT ADD GESTIONPAIEMENT VARCHAR(255);
UPDATE MODELECONTRAT SET GESTIONPAIEMENT='NON_GERE' WHERE GESTIONPAIEMENT IS NULL;
ALTER TABLE MODELECONTRAT ADD TEXTPAIEMENT VARCHAR(2048);

//21-01-2014 - Gestion des utilisateurs inactifs et des avoirs
ALTER TABLE UTILISATEUR ADD ETATUTILISATEUR VARCHAR(255);
UPDATE UTILISATEUR SET ETATUTILISATEUR='ACTIF';
ALTER TABLE CONTRAT ADD MONTANTAVOIR INTEGER;
UPDATE CONTRAT SET MONTANTAVOIR=0;


//31-01-2014 - Gestion des remises
CREATE TABLE REMISEPRODUCTEUR (ID BIGINT NOT NULL, DATECREATION TIMESTAMP, DATEREMISE TIMESTAMP, MONTANT INTEGER, DATEPAIEMENT_ID BIGINT, PRIMARY KEY (ID));
ALTER TABLE PAIEMENT ADD REMISE_ID BIGINT;
ALTER TABLE REMISEPRODUCTEUR ADD CONSTRAINT UNQ_REMISEPRODUCTEUR_0 UNIQUE (datePaiement_id);
ALTER TABLE REMISEPRODUCTEUR ADD CONSTRAINT FK_REMISEPRODUCTEUR_DATEPAIEMENT_ID FOREIGN KEY (DATEPAIEMENT_ID) REFERENCES MODELECONTRATDATEPAIEMENT (ID);
ALTER TABLE PAIEMENT ADD CONSTRAINT FK_PAIEMENT_REMISE_ID FOREIGN KEY (REMISE_ID) REFERENCES REMISEPRODUCTEUR (ID);


// 17-02-2014 - Gestion des producteurs 
ALTER TABLE UTILISATEUR DROP COLUMN typUtilisateur;
ALTER TABLE UTILISATEUR drop CONSTRAINT FK_UTILISATEUR_PRODUCTEUR_ID;
ALTER TABLE UTILISATEUR DROP COLUMN producteur_id;
ALTER TABLE UTILISATEUR ADD CODEPOSTAL VARCHAR(255);
ALTER TABLE UTILISATEUR ADD LIBADR1 VARCHAR(255);
ALTER TABLE UTILISATEUR ADD NUMTEL1 VARCHAR(255);
ALTER TABLE UTILISATEUR ADD NUMTEL2 VARCHAR(255);
ALTER TABLE UTILISATEUR ADD VILLE VARCHAR(255);
ALTER TABLE PRODUCTEUR ADD DELAIMODIFCONTRAT INTEGER;
insert into ROLE values(5,'PRODUCTEUR');
CREATE TABLE LIENPRODUCTEUR (ID BIGINT NOT NULL, LIEN VARCHAR(255), PRODUCTEUR_ID BIGINT, UTILISATEUR_ID BIGINT, PRIMARY KEY (ID));


// 02-04-2014 - Paramètres généraux
CREATE TABLE PARAMETRES (ID BIGINT NOT NULL, BACKUPRECEIVER VARCHAR(255), NOMAMAP VARCHAR(255),VILLEAMAP VARCHAR(255), SENDINGMAILPASSWORD VARCHAR(255), SENDINGMAILUSERNAME VARCHAR(255), URL VARCHAR(255), PRIMARY KEY (ID));
insert into PARAMETRES values(1,'','','','','');
DROP TABLE LIENPRODUCTEUR;
CREATE TABLE PRODUCTEURREFERENT (ID BIGINT NOT NULL, PRODUCTEUR_ID BIGINT, REFERENT_ID BIGINT, PRIMARY KEY (ID));
CREATE TABLE PRODUCTEURUTILISATEUR (ID BIGINT NOT NULL, NOTIFICATION VARCHAR(255), PRODUCTEUR_ID BIGINT, UTILISATEUR_ID BIGINT, PRIMARY KEY (ID));
CREATE TABLE NOTIFICATIONDONE (ID BIGINT NOT NULL, DATEENVOI TIMESTAMP, TYPNOTIFICATIONDONE VARCHAR(255), MODELECONTRATDATE_ID BIGINT, UTILISATEUR_ID BIGINT, PRIMARY KEY (ID));
ALTER TABLE PRODUCTEURUTILISATEUR ADD CONSTRAINT FK_PRODUCTEURUTILISATEUR_UTILISATEUR_ID FOREIGN KEY (UTILISATEUR_ID) REFERENCES UTILISATEUR (ID);
ALTER TABLE PRODUCTEURUTILISATEUR ADD CONSTRAINT FK_PRODUCTEURUTILISATEUR_PRODUCTEUR_ID FOREIGN KEY (PRODUCTEUR_ID) REFERENCES PRODUCTEUR (ID);
ALTER TABLE PRODUCTEURREFERENT ADD CONSTRAINT FK_PRODUCTEURREFERENT_REFERENT_ID FOREIGN KEY (REFERENT_ID) REFERENCES UTILISATEUR (ID);
ALTER TABLE PRODUCTEURREFERENT ADD CONSTRAINT FK_PRODUCTEURREFERENT_PRODUCTEUR_ID FOREIGN KEY (PRODUCTEUR_ID) REFERENCES PRODUCTEUR (ID);



// 26-05-2014 - Planning des distribution
CREATE TABLE DATEPERMANENCEUTILISATEUR (ID BIGINT NOT NULL, NUMSESSION INTEGER, DATEPERMANENCE_ID BIGINT, UTILISATEUR_ID BIGINT, PRIMARY KEY (ID));
CREATE TABLE DATEPERMANENCE (ID BIGINT NOT NULL, DATEPERMANENCE DATE, PRIMARY KEY (ID));
ALTER TABLE DATEPERMANENCEUTILISATEUR ADD CONSTRAINT FK_DATEPERMANENCEUTILISATEUR_DATEPERMANENCE_ID FOREIGN KEY (DATEPERMANENCE_ID) REFERENCES DATEPERMANENCE (ID);
ALTER TABLE DATEPERMANENCEUTILISATEUR ADD CONSTRAINT FK_DATEPERMANENCEUTILISATEUR_UTILISATEUR_ID FOREIGN KEY (UTILISATEUR_ID) REFERENCES UTILISATEUR (ID);
ALTER TABLE PARAMETRES ADD ETATPLANNINGDISTRIBUTION VARCHAR(255);
UPDATE PARAMETRES SET ETATPLANNINGDISTRIBUTION='INACTIF';

// 16-06-2014 - Cotisation 
ALTER TABLE UTILISATEUR ADD COTISATION VARCHAR(255);
UPDATE UTILISATEUR SET COTISATION='ACTIF';


// 21-08-2014 - Refonte de la gestion des droits
CREATE TABLE ROLETRESORIER (ID BIGINT NOT NULL, UTILISATEUR_ID BIGINT, PRIMARY KEY (ID));
CREATE TABLE ROLEADMIN (ID BIGINT NOT NULL, UTILISATEUR_ID BIGINT, PRIMARY KEY (ID));
ALTER TABLE ROLEADMIN ADD CONSTRAINT FK_ROLEADMIN_UTILISATEUR_ID FOREIGN KEY (UTILISATEUR_ID) REFERENCES UTILISATEUR (ID);
ALTER TABLE ROLETRESORIER ADD CONSTRAINT FK_ROLETRESORIER_UTILISATEUR_ID FOREIGN KEY (UTILISATEUR_ID) REFERENCES UTILISATEUR (ID);
ALTER TABLE UTILISATEUR drop CONSTRAINT FK_UTILISATEUR_ROLE_ID;
ALTER TABLE UTILISATEUR DROP COLUMN ROLE_ID;
DROP TABLE ROLE;
insert into ROLEADMIN values(1,1052);
ALTER TABLE PRODUCTEUR ADD DESCRIPTION VARCHAR(2048);
ALTER TABLE NOTIFICATIONDONE ADD  DATEPERMANENCEUTILISATEUR_ID BIGINT;
ALTER TABLE NOTIFICATIONDONE ADD CONSTRAINT FK_NOTIFICATIONDONE_DATEPERMANENCEUTILISATEUR_ID FOREIGN KEY (DATEPERMANENCEUTILISATEUR_ID) REFERENCES DATEPERMANENCEUTILISATEUR (ID);
ALTER TABLE PARAMETRES ADD CONTENUMAILRAPPELPERMANENCE VARCHAR(20480);
ALTER TABLE PARAMETRES ADD DELAIMAILRAPPELPERMANENCE INTEGER;
ALTER TABLE PARAMETRES ADD ENVOIMAILRAPPELPERMANENCE VARCHAR(255);
ALTER TABLE PARAMETRES ADD TITREMAILRAPPELPERMANENCE VARCHAR(2048);
update parametres set ENVOIMAILRAPPELPERMANENCE = 'NON' , DELAIMAILRAPPELPERMANENCE=0;

ALTER TABLE PARAMETRES ADD ENVOIMAILPERIODIQUE VARCHAR(255);
ALTER TABLE PARAMETRES ADD NUMJOURDANSMOIS INTEGER;
ALTER TABLE PARAMETRES ADD CONTENUMAILPERIODIQUE VARCHAR(20480);
ALTER TABLE PARAMETRES ADD TITREMAILPERIODIQUE VARCHAR(2048);
update parametres set ENVOIMAILPERIODIQUE = 'NON' , NUMJOURDANSMOIS=0;
ALTER TABLE NOTIFICATIONDONE ADD  DATEMAILPERIODIQUE DATE;
  




